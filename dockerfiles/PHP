ARG PHP_VERSION
FROM php:${PHP_VERSION}

ARG TZ
ARG MAINTAINER
ARG PHP_EXPOSE

# 安装 composer
#COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
RUN curl -sS https://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer && \
    composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/

# 替换阿里云源
RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
    libbz2-dev \
    libcurl4-openssl-dev \
    libfreetype6-dev \
    libgmp-dev \
    libicu-dev \
    libjpeg-dev \
    libmagickcore-dev \
    libmagickwand-dev \
    libpng-dev \
    libssl-dev \
    libwebp-dev \
    libxml2-dev \
    libxslt1-dev \
    libzip-dev \
    libzstd-dev \
    librabbitmq-dev \
    supervisor \
    cron && \
    apt-get clean && \
    rm -r /var/lib/apt/lists/*

# 安装php环境包
RUN docker-php-ext-install -j$(nproc) bcmath \
    bz2 \
    exif \
    gettext \
    gmp \
    intl \
    mysqli \
    opcache \
    pcntl \
    pdo_mysql \
    shmop \
    soap \
    sockets \
    sysvsem \
    xsl \
    zip && \
    docker-php-ext-configure gd \
    --with-webp=/usr/include/webp \
    --with-jpeg=/usr/include \
    --with-freetype=/usr/include/freetype2 && \
    docker-php-ext-install -j$(nproc) gd

COPY php_entrypoint.sh /usr/local/bin/entrypoint.sh

RUN pecl install igbinary && docker-php-ext-enable igbinary && \
    pecl install --onlyreqdeps --nobuild redis && \
    cd "$(pecl config-get temp_dir)/redis" && \
    phpize && ./configure  --enable-redis-igbinary --enable-redis-lzf --enable-redis-zstd && \
    make && make install && cd && \
    rm -rf "$(pecl config-get temp_dir)/redis" && docker-php-ext-enable redis && \
    pecl install --onlyreqdeps --nobuild swoole && \
    cd "$(pecl config-get temp_dir)/swoole" && \
    phpize && ./configure --enable-sockets --enable-openssl --enable-http2 --enable-mysqlnd --enable-swoole-json --enable-swoole-curl && \
    make && make install && cd && \
    rm -rf "$(pecl config-get temp_dir)/swoole" && docker-php-ext-enable swoole && \
    pecl install mongodb && docker-php-ext-enable mongodb && \
    pecl install imagick && docker-php-ext-enable imagick && \
    pecl install amqp && docker-php-ext-enable amqp && \
    rm -r /tmp/pear/download/* && cd && \
    mkdir -p /etc/cron.d && \
    touch /etc/cron.d/cron && \
    chmod 0644 /etc/cron.d/cron && \
    chmod 777 /usr/local/bin/entrypoint.sh

EXPOSE ${PHP_EXPOSE}

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

#维护者信息
MAINTAINER ${MAINTAINER}

#时区
ENV TZ ${TZ}
RUN date -R
